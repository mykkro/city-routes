Draft Architecture and API
==========================


Level 1: Nodes and Edges (Connections)

Level 2: Roads, Intersections, Roundabouts, ParkingZones

Level 3: Road signs and pedestrian crossings and semaphores

=================

Position { x:float, y:float, z:float }
Node { position: Position }
Edge { from: Node, to: Node }

Road { alongEdge: Edge, ways: Way[], annotations: RoadAnnotation[] }

Way { reversed: boolean, segments: WaySegment[] }
WaySegment { length: float, annotations: RoadAnnotation[] }

Lane { width: float, annotations: LaneAnnotation[] }
BasicLane(Lane) { width: float }
SplitLane(Lane) { number:integer }  // lane will split into multiple lanes
JoinLane(Lane) { number: integer (2) }  // several neighboring lanes will merge into one

AnnotationSide enum(Center,Left,Right)
Annotation { position: float, side: AnnotationSide, length: float }
LaneAnnotation(Annotation) // road sign, horizontal sign on the road
WayAnnotation(Annotation) // road sign, semaphore, parking
RoadAnnotation(Annotation)

ParkingStripParallel(WayAnnotation) { width: float }
ParkingStripForward(WayAnnotation) { boxWidth: float, boxLength: float, boxAngle: float }

Ex:

way.lanes - options for various d (=distance from start of the road)
way.lanes    L(100m) S(20m) L(500m) J(20m) L(1200m)
                            L(500m)

way - can be a single Way(Segment) or a sequence of WaySegments

